name: VibeCoder CI

on:
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install gitleaks for secret scanning
        run: bash scripts/install_gitleaks.sh

      - name: Run secret scan (gitleaks)
        run: gitleaks detect --source . --verbose --report-path artifacts/gitleaks_report.json

      - name: Run compliance scan (Licenses & Sensitive Words)
        run: python scripts/run_compliance_scan.py
      
      - name: Run unit tests with coverage
        run: pytest --cov=src --cov-report=html:artifacts/coverage

      - name: Run backtest to generate artifacts
        run: python scripts/backtest.py

      - name: Generate performance charts
        run: python scripts/generate_charts.py

      - name: Run Gate evaluation
        id: gate_check
        run: python scripts/run_gate.py
      
      - name: Generate Final PR Body
        id: pr_body
        run: echo "body<<EOF" >> $GITHUB_OUTPUT && python scripts/format_pr_body.py >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT

      - name: Update PR Body with Full Report
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_BODY: "${{ steps.pr_body.outputs.body }}"
        run: gh pr edit ${{ github.event.pull_request.number }} --body "$PR_BODY"
          
      - name: Upload all artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: all-artifacts
          path: |
            artifacts/
            gitleaks_report.json
