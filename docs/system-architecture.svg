<?xml version="1.0" encoding="UTF-8"?>
<svg width="1200" height="800" viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font: bold 24px Arial; text-anchor: middle; fill: #2c3e50; }
      .subtitle { font: 16px Arial; text-anchor: middle; fill: #34495e; }
      .node-text { font: 14px Arial; text-anchor: middle; fill: white; }
      .node-desc { font: 12px Arial; text-anchor: middle; fill: #7f8c8d; }
      .flow-text { font: 12px Arial; text-anchor: middle; fill: #2c3e50; }
      .agent-box { fill: #3498db; stroke: #2980b9; stroke-width: 2; rx: 10; }
      .process-box { fill: #e74c3c; stroke: #c0392b; stroke-width: 2; rx: 8; }
      .data-box { fill: #f39c12; stroke: #e67e22; stroke-width: 2; rx: 8; }
      .system-box { fill: #27ae60; stroke: #229954; stroke-width: 2; rx: 8; }
      .decision-box { fill: #9b59b6; stroke: #8e44ad; stroke-width: 2; rx: 8; }
      .arrow { stroke: #34495e; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .retry-arrow { stroke: #e74c3c; stroke-width: 2; fill: none; marker-end: url(#arrowhead); stroke-dasharray: 5,5; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#34495e" />
    </marker>
  </defs>

  <!-- Title -->
  <text x="600" y="30" class="title">Multi-Agent Project Development Kit</text>
  <text x="600" y="55" class="subtitle">System Architecture & Workflow</text>

  <!-- User Input -->
  <rect x="50" y="100" width="120" height="60" class="data-box"/>
  <text x="110" y="125" class="node-text">User Input</text>
  <text x="110" y="140" class="node-text">Natural Language</text>
  <text x="110" y="155" class="node-text">Task Description</text>

  <!-- CLI Interface -->
  <rect x="220" y="100" width="120" height="60" class="system-box"/>
  <text x="280" y="125" class="node-text">CLI Interface</text>
  <text x="280" y="140" class="node-text">vibe.py</text>
  <text x="280" y="155" class="node-text">Command Parser</text>

  <!-- LangGraph Engine -->
  <rect x="390" y="100" width="120" height="60" class="system-box"/>
  <text x="450" y="125" class="node-text">LangGraph</text>
  <text x="450" y="140" class="node-text">Workflow Engine</text>
  <text x="450" y="155" class="node-text">State Management</text>

  <!-- Planner Agent (GPT-5) -->
  <rect x="100" y="220" width="140" height="80" class="agent-box"/>
  <text x="170" y="245" class="node-text">Planner Agent</text>
  <text x="170" y="260" class="node-text">GPT-5</text>
  <text x="170" y="275" class="node-text">Task Breakdown</text>
  <text x="170" y="290" class="node-text">Specification</text>

  <!-- Dev Agent (Claude Sonnet) -->
  <rect x="280" y="220" width="140" height="80" class="agent-box"/>
  <text x="350" y="245" class="node-text">Dev Agent</text>
  <text x="350" y="260" class="node-text">Claude Sonnet</text>
  <text x="350" y="275" class="node-text">Code Generation</text>
  <text x="350" y="290" class="node-text">Minimal Changes</text>

  <!-- Executor Agent -->
  <rect x="460" y="220" width="140" height="80" class="agent-box"/>
  <text x="530" y="245" class="node-text">Executor Agent</text>
  <text x="530" y="260" class="node-text">Cursor Integration</text>
  <text x="530" y="275" class="node-text">Branch Creation</text>
  <text x="530" y="290" class="node-text">PR Generation</text>

  <!-- Gate Agent -->
  <rect x="640" y="220" width="140" height="80" class="agent-box"/>
  <text x="710" y="245" class="node-text">Gate Agent</text>
  <text x="710" y="260" class="node-text">Quality Control</text>
  <text x="710" y="275" class="node-text">Acceptance</text>
  <text x="710" y="290" class="node-text">Validation</text>

  <!-- Model Routing -->
  <rect x="820" y="100" width="120" height="60" class="process-box"/>
  <text x="880" y="125" class="node-text">Model Routing</text>
  <text x="880" y="140" class="node-text">Cost Optimization</text>
  <text x="880" y="155" class="node-text">Fallback Logic</text>

  <!-- Security Layer -->
  <rect x="980" y="100" width="120" height="60" class="process-box"/>
  <text x="1040" y="125" class="node-text">Security Layer</text>
  <text x="1040" y="140" class="node-text">Secret Scanning</text>
  <text x="1040" y="155" class="node-text">Input Validation</text>

  <!-- Quality Gates -->
  <rect x="100" y="340" width="140" height="80" class="decision-box"/>
  <text x="170" y="365" class="node-text">Backtest Gate</text>
  <text x="170" y="380" class="node-text">Winrate ≥ 70%</text>
  <text x="170" y="395" class="node-text">MFE ≥ 1%</text>
  <text x="170" y="410" class="node-text">MAE ≤ 0.3%</text>

  <rect x="280" y="340" width="140" height="80" class="decision-box"/>
  <text x="350" y="365" class="node-text">Security Gate</text>
  <text x="350" y="380" class="node-text">Secret Detection</text>
  <text x="350" y="395" class="node-text">Vulnerability</text>
  <text x="350" y="410" class="node-text">Scanning</text>

  <rect x="460" y="340" width="140" height="80" class="decision-box"/>
  <text x="530" y="365" class="node-text">Performance Gate</text>
  <text x="530" y="380" class="node-text">Test Coverage</text>
  <text x="530" y="395" class="node-text">Code Quality</text>
  <text x="530" y="410" class="node-text">Metrics</text>

  <!-- Cursor IDE Integration -->
  <rect x="640" y="340" width="140" height="80" class="system-box"/>
  <text x="710" y="365" class="node-text">Cursor IDE</text>
  <text x="710" y="380" class="node-text">Auto Branch</text>
  <text x="710" y="395" class="node-text">Code Apply</text>
  <text x="710" y="410" class="node-text">Test Execution</text>

  <!-- Output Systems -->
  <rect x="100" y="460" width="120" height="60" class="data-box"/>
  <text x="160" y="485" class="node-text">Artifacts</text>
  <text x="160" y="500" class="node-text">task.json</text>
  <text x="160" y="515" class="node-text">Reports</text>

  <rect x="260" y="460" width="120" height="60" class="data-box"/>
  <text x="320" y="485" class="node-text">Git Repository</text>
  <text x="320" y="500" class="node-text">Branch</text>
  <text x="320" y="515" class="node-text">Commits</text>

  <rect x="420" y="460" width="120" height="60" class="data-box"/>
  <text x="480" y="485" class="node-text">Pull Request</text>
  <text x="480" y="500" class="node-text">Code Review</text>
  <text x="480" y="515" class="node-text">Documentation</text>

  <!-- Observability -->
  <rect x="580" y="460" width="120" height="60" class="process-box"/>
  <text x="640" y="485" class="node-text">Observability</text>
  <text x="640" y="500" class="node-text">Metrics</text>
  <text x="640" y="515" class="node-text">Logging</text>

  <!-- Cost Tracking -->
  <rect x="740" y="460" width="120" height="60" class="process-box"/>
  <text x="800" y="485" class="node-text">Cost Tracking</text>
  <text x="800" y="500" class="node-text">Token Usage</text>
  <text x="800" y="515" class="node-text">Performance</text>

  <!-- Configuration -->
  <rect x="900" y="340" width="140" height="80" class="data-box"/>
  <text x="970" y="365" class="node-text">Configuration</text>
  <text x="970" y="380" class="node-text">ProjectSpec.yaml</text>
  <text x="970" y="395" class="node-text">Environment</text>
  <text x="970" y="410" class="node-text">Variables</text>

  <!-- Main Flow Arrows -->
  <line x1="170" y1="130" x2="220" y2="130" class="arrow"/>
  <line x1="340" y1="130" x2="390" y2="130" class="arrow"/>
  <line x1="450" y1="160" x2="170" y2="220" class="arrow"/>
  <line x1="170" y1="300" x2="350" y2="220" class="arrow"/>
  <line x1="350" y1="300" x2="530" y2="220" class="arrow"/>
  <line x1="530" y1="300" x2="710" y2="220" class="arrow"/>

  <!-- Quality Gate Flow -->
  <line x1="710" y1="300" x2="170" y2="340" class="arrow"/>
  <line x1="240" y1="380" x2="280" y2="380" class="arrow"/>
  <line x1="420" y1="380" x2="460" y2="380" class="arrow"/>
  <line x1="600" y1="380" x2="640" y2="380" class="arrow"/>

  <!-- Output Flow -->
  <line x1="710" y1="420" x2="160" y2="460" class="arrow"/>
  <line x1="710" y1="420" x2="320" y2="460" class="arrow"/>
  <line x1="710" y1="420" x2="480" y2="460" class="arrow"/>
  <line x1="710" y1="420" x2="640" y2="460" class="arrow"/>
  <line x1="710" y1="420" x2="800" y2="460" class="arrow"/>

  <!-- Retry Loop -->
  <path d="M 170 340 Q 50 320 50 260 Q 50 220 280 240" class="retry-arrow"/>
  <text x="50" y="280" class="flow-text">Retry Loop</text>
  <text x="50" y="295" class="flow-text">(Gate Failed)</text>

  <!-- Configuration Connections -->
  <line x1="900" y1="380" x2="710" y2="300" class="arrow"/>
  <line x1="970" y1="340" x2="880" y2="160" class="arrow"/>

  <!-- Security Integration -->
  <line x1="980" y1="130" x2="710" y2="220" class="arrow"/>
  <line x1="1040" y1="160" x2="350" y2="340" class="arrow"/>

  <!-- Legend -->
  <g transform="translate(850, 550)">
    <text x="0" y="0" class="subtitle">Legend</text>
    <rect x="0" y="10" width="20" height="15" class="agent-box"/>
    <text x="25" y="22" class="node-desc">AI Agents</text>
    <rect x="0" y="30" width="20" height="15" class="process-box"/>
    <text x="25" y="42" class="node-desc">Processing</text>
    <rect x="0" y="50" width="20" height="15" class="data-box"/>
    <text x="25" y="62" class="node-desc">Data/Config</text>
    <rect x="0" y="70" width="20" height="15" class="system-box"/>
    <text x="25" y="82" class="node-desc">Systems</text>
    <rect x="0" y="90" width="20" height="15" class="decision-box"/>
    <text x="25" y="102" class="node-desc">Quality Gates</text>
    <line x1="0" y1="115" x2="20" y2="115" class="arrow"/>
    <text x="25" y="119" class="node-desc">Main Flow</text>
    <line x1="0" y1="130" x2="20" y2="130" class="retry-arrow"/>
    <text x="25" y="134" class="node-desc">Retry Flow</text>
  </g>

  <!-- Workflow Steps -->
  <g transform="translate(50, 580)">
    <text x="0" y="0" class="subtitle">Workflow Steps</text>
    <text x="0" y="20" class="node-desc">1. User provides natural language task description</text>
    <text x="0" y="35" class="node-desc">2. CLI parses input and initializes LangGraph workflow</text>
    <text x="0" y="50" class="node-desc">3. Planner Agent (GPT-5) breaks down task into specifications</text>
    <text x="0" y="65" class="node-desc">4. Dev Agent (Claude Sonnet) generates minimal code changes</text>
    <text x="0" y="80" class="node-desc">5. Executor Agent hands off to Cursor for implementation</text>
    <text x="0" y="95" class="node-desc">6. Quality Gates validate results against acceptance criteria</text>
    <text x="0" y="110" class="node-desc">7. If gates fail, retry loop provides corrective feedback</text>
    <text x="0" y="125" class="node-desc">8. Success: Generate PR with documentation and metrics</text>
  </g>

  <!-- Key Features -->
  <g transform="translate(650, 580)">
    <text x="0" y="0" class="subtitle">Key Features</text>
    <text x="0" y="20" class="node-desc">• Multi-agent coordination with specialized roles</text>
    <text x="0" y="35" class="node-desc">• Dynamic model routing with cost optimization</text>
    <text x="0" y="50" class="node-desc">• Security-first design with automated scanning</text>
    <text x="0" y="65" class="node-desc">• Quality gates with automatic retry mechanisms</text>
    <text x="0" y="80" class="node-desc">• Seamless Cursor IDE integration</text>
    <text x="0" y="95" class="node-desc">• Comprehensive observability and cost tracking</text>
    <text x="0" y="110" class="node-desc">• Production-ready with error handling</text>
    <text x="0" y="125" class="node-desc">• Configurable acceptance criteria</text>
  </g>

</svg>